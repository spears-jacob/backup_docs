# Source and destination tables. Include the environment.
source: "dev_tmp.asp_asapp_convos_metrics"
destination: "dev_tmp.asp_asapp_convos_metrics_new"

# Determines which direction the transformation begins.
descending: true

# Write this many partitions at a time.
interval: 5

# Number of intervals to run. If not specified, it will go over all partitions.
# dryRun: 1

# Optional configuration to only run on a partiticular date range.
# dateRange: {
#   from: 2019-11-01
#   to: 2019-11-02
#}

# The regex pattern that matches the identifying date partition(s). These are the partitions that are used to split up
# the work into intervals. Each value should be in parentheses.
# Examples include:
#   datePartitionRegex: ".*partition_date_denver=(\\d{4}-\\d{2}-\\d{2}).*"
#   datePartitionRegex: ".*partition_date_hour_utc=(\\d{4}-\\d{2}-\\d{2}_\\d{2}).*"
#   - datePartitionRegex: ".*partition_date=(\\d{4f}-\\d{2}-\\d{2})/partition_hour=(\\d{2}).*"
#   - datePartitionRegex: ".*partition_date=(\\d{4}-\\d{2}-\\d{2})/partition_hour=(\\d{2}).*"

datePartitionRegex: ".*partition_date=(\\d{4}-\\d{2}-\\d{2}).*"
datePartitions: [
  "partition_date"
]

# The partitions used in the `partitionBy` call when saving the table.
partitions: [
  "partition_date"
]

# A map where the keys correspond to the column that will be transformed, and the values are the required transform.
# For structs, please wrap the location in quotes.
transforms: {
  customer_id: Encrypt_String
}
